<!--
 ~  This file is part of the Jikes RVM project (http://jikesrvm.org).
 ~
 ~  This file is licensed to You under the Eclipse Public License (EPL);
 ~  You may not use this file except in compliance with the License. You
 ~  may obtain a copy of the License at
 ~
 ~      http://www.opensource.org/licenses/eclipse-1.0.php
 ~
 ~  See the COPYRIGHT.txt file distributed with this work for information
 ~  regarding copyright ownership.
 -->

<project name="openjdk_testing" default="test" basedir=".">

	<import file="../../../build/tests.xml" />
	<import file="${jikesrvm.dir}/build/components/openjdk.xml"/>
	<property name="main.java" location="expected"/>
	<property name="build.classes" location="${build.tests.dir}/classes"/>
	<property name="test.class.path" value="${build.classes}"/>
	<property name="openjdk.jar.dir" value="${openjdk.dir}"/>
	<property name="openjdk.jar.filename" value="OpenJDKTests_openjdk6.jar"/>
	<property name="expected.dir" value="expected/openJDKtests"/>


	<macrodef name="hotspotTest" description="runs class on Hotspot and places output in `expected` folder">
		<attribute name="classname"/>	<!-- the name of the class, without packages -->
		<attribute name="package"/>	<!-- the fully qualified classpath, excluding the classname -->
		<attribute name="outdir"/>	<!-- where the .expected file will be created; should correspond to @{package} -->
		<sequential>
		<!--	<echo message="Running @{package}.@{classname} on Hotspot"/>	-->
			<mkdir dir="@{outdir}"/>
			<java classname="@{package}.@{classname}"
				output="@{outdir}/@{classname}.expected"
				fork="true">
				<classpath>
					<pathelement location="${openjdk.jar.dir}/${openjdk.jar.filename}"/>	
				</classpath>
			</java>
		</sequential>
	</macrodef>

		


<target name="test" depends="init">

	<!-- running the tests with HotSpot -->

<hotspotTest classname="StackTraceSerialization" package="openJDKtests.lang.Throwable" outdir="${expected.dir}/lang/Throwable"/>
<hotspotTest classname="LocalizedMessage" package="openJDKtests.lang.Throwable" outdir="${expected.dir}/lang/Throwable"/>
<hotspotTest classname="LegacyChainedExceptionSerialization" package="openJDKtests.lang.Throwable" outdir="${expected.dir}/lang/Throwable"/>
<hotspotTest classname="ChainedExceptions" package="openJDKtests.lang.Throwable" outdir="${expected.dir}/lang/Throwable"/>
<hotspotTest classname="NewChainedExceptions" package="openJDKtests.lang.Throwable" outdir="${expected.dir}/lang/Throwable"/>
<hotspotTest classname="ParseFloat" package="openJDKtests.lang.Float" outdir="${expected.dir}/lang/Float"/>
<hotspotTest classname="Extrema" package="openJDKtests.lang.Float" outdir="${expected.dir}/lang/Float"/>
<hotspotTest classname="Constants" package="openJDKtests.lang.Float" outdir="${expected.dir}/lang/Float"/>
<hotspotTest classname="NaNInfinityParsing" package="openJDKtests.lang.Float" outdir="${expected.dir}/lang/Float"/>
<hotspotTest classname="TestThreadId" package="openJDKtests.lang.ThreadLocal" outdir="${expected.dir}/lang/ThreadLocal"/>
<hotspotTest classname="MemoryLeak" package="openJDKtests.lang.ThreadLocal" outdir="${expected.dir}/lang/ThreadLocal"/>
<hotspotTest classname="Basic" package="openJDKtests.lang.ThreadLocal" outdir="${expected.dir}/lang/ThreadLocal"/>
<hotspotTest classname="InitialValue" package="openJDKtests.lang.ThreadLocal" outdir="${expected.dir}/lang/ThreadLocal"/>
<hotspotTest classname="ThreadId" package="openJDKtests.lang.ThreadLocal" outdir="${expected.dir}/lang/ThreadLocal"/>
<hotspotTest classname="TLRemoveTest" package="openJDKtests.lang.ThreadLocal" outdir="${expected.dir}/lang/ThreadLocal"/>
<hotspotTest classname="BitTwiddle" package="openJDKtests.lang.Integer" outdir="${expected.dir}/lang/Integer"/>
<hotspotTest classname="ParsingTest" package="openJDKtests.lang.Integer" outdir="${expected.dir}/lang/Integer"/>
<hotspotTest classname="GetInteger" package="openJDKtests.lang.Integer" outdir="${expected.dir}/lang/Integer"/>
<hotspotTest classname="Decode" package="openJDKtests.lang.Integer" outdir="${expected.dir}/lang/Integer"/>
<hotspotTest classname="ByteSwap" package="openJDKtests.lang.Short" outdir="${expected.dir}/lang/Short"/>
<hotspotTest classname="Decode" package="openJDKtests.lang.Short" outdir="${expected.dir}/lang/Short"/>
<hotspotTest classname="GetLong" package="openJDKtests.lang.Long" outdir="${expected.dir}/lang/Long"/>
<hotspotTest classname="BitTwiddle" package="openJDKtests.lang.Long" outdir="${expected.dir}/lang/Long"/>
<hotspotTest classname="ParsingTest" package="openJDKtests.lang.Long" outdir="${expected.dir}/lang/Long"/>
<hotspotTest classname="Decode" package="openJDKtests.lang.Long" outdir="${expected.dir}/lang/Long"/>
<hotspotTest classname="Expm1Tests" package="openJDKtests.lang.StrictMath" outdir="${expected.dir}/lang/StrictMath"/>
<hotspotTest classname="Tests" package="openJDKtests.lang.StrictMath" outdir="${expected.dir}/lang/StrictMath"/>
<hotspotTest classname="CubeRootTests" package="openJDKtests.lang.StrictMath" outdir="${expected.dir}/lang/StrictMath"/>
<hotspotTest classname="Log10Tests" package="openJDKtests.lang.StrictMath" outdir="${expected.dir}/lang/StrictMath"/>
<hotspotTest classname="Log1pTests" package="openJDKtests.lang.StrictMath" outdir="${expected.dir}/lang/StrictMath"/>
<hotspotTest classname="HyperbolicTests" package="openJDKtests.lang.StrictMath" outdir="${expected.dir}/lang/StrictMath"/>
<hotspotTest classname="HypotTests" package="openJDKtests.lang.StrictMath" outdir="${expected.dir}/lang/StrictMath"/>
<hotspotTest classname="ExceedMaxDim" package="openJDKtests.lang.reflect.Array" outdir="${expected.dir}/lang/reflect/Array"/>
<hotspotTest classname="TestParameterAnnotations" package="openJDKtests.lang.reflect.Constructor" outdir="${expected.dir}/lang/reflect/Constructor"/>
<hotspotTest classname="Set" package="openJDKtests.lang.reflect.Field" outdir="${expected.dir}/lang/reflect/Field"/>
<hotspotTest classname="StaticFieldTest" package="openJDKtests.lang.reflect.Field.eightsixfour" outdir="${expected.dir}/lang/reflect/Field/eightsixfour"/>
<hotspotTest classname="toStringTest" package="openJDKtests.lang.reflect.Modifier" outdir="${expected.dir}/lang/reflect/Modifier"/>
<hotspotTest classname="ArrayAssignment" package="openJDKtests.lang.reflect.Assignment" outdir="${expected.dir}/lang/reflect/Assignment"/>
<hotspotTest classname="exceptionCauseTest" package="openJDKtests.lang.reflect.Generics" outdir="${expected.dir}/lang/reflect/Generics"/>
<hotspotTest classname="getAnnotationTest" package="openJDKtests.lang.reflect.Generics" outdir="${expected.dir}/lang/reflect/Generics"/>
<hotspotTest classname="Probe" package="openJDKtests.lang.reflect.Generics" outdir="${expected.dir}/lang/reflect/Generics"/>
<hotspotTest classname="StringsAndBounds" package="openJDKtests.lang.reflect.Generics" outdir="${expected.dir}/lang/reflect/Generics"/>
<hotspotTest classname="TestC1" package="openJDKtests.lang.reflect.Generics" outdir="${expected.dir}/lang/reflect/Generics"/>
<hotspotTest classname="TestC2" package="openJDKtests.lang.reflect.Generics" outdir="${expected.dir}/lang/reflect/Generics"/>
<hotspotTest classname="TestN1" package="openJDKtests.lang.reflect.Generics" outdir="${expected.dir}/lang/reflect/Generics"/>
<hotspotTest classname="TestParameterizedType" package="openJDKtests.lang.reflect.Generics" outdir="${expected.dir}/lang/reflect/Generics"/>
<hotspotTest classname="Boxing" package="openJDKtests.lang.reflect.Proxy" outdir="${expected.dir}/lang/reflect/Proxy"/>
<hotspotTest classname="CharType" package="openJDKtests.lang.reflect.Proxy" outdir="${expected.dir}/lang/reflect/Proxy"/>
<hotspotTest classname="ClassRestrictions" package="openJDKtests.lang.reflect.Proxy" outdir="${expected.dir}/lang/reflect/Proxy"/>
<hotspotTest classname="Test" package="openJDKtests.lang.reflect.Proxy.returnTypes" outdir="${expected.dir}/lang/reflect/Proxy/returnTypes"/>
<hotspotTest classname="InheritedInterfaceMethods" package="openJDKtests.lang.reflect.Method" outdir="${expected.dir}/lang/reflect/Method"/>
<hotspotTest classname="ErrorInInvoke" package="openJDKtests.lang.reflect.Method.invoke" outdir="${expected.dir}/lang/reflect/Method/invoke"/>
<hotspotTest classname="IllegalAccessInInvoke" package="openJDKtests.lang.reflect.Method.invoke" outdir="${expected.dir}/lang/reflect/Method/invoke"/>
<hotspotTest classname="Decode" package="openJDKtests.lang.Byte" outdir="${expected.dir}/lang/Byte"/>
<hotspotTest classname="PublicConstructor" package="openJDKtests.lang.StackTraceElement" outdir="${expected.dir}/lang/StackTraceElement"/>
<hotspotTest classname="Cause" package="openJDKtests.lang.AssertionError" outdir="${expected.dir}/lang/AssertionError"/>
<hotspotTest classname="Sanity" package="openJDKtests.lang.Class.getClasses" outdir="${expected.dir}/lang/Class/getClasses"/>
<hotspotTest classname="Cast" package="openJDKtests.lang.Class" outdir="${expected.dir}/lang/Class"/>
<hotspotTest classname="EnclosingConstructorTests" package="openJDKtests.lang.Class.getEnclosingConstructor" outdir="${expected.dir}/lang/Class/getEnclosingConstructor"/>
<hotspotTest classname="IsSynthetic" package="openJDKtests.lang.Class" outdir="${expected.dir}/lang/Class"/>
<hotspotTest classname="Exceptions" package="openJDKtests.lang.Class.getMethod" outdir="${expected.dir}/lang/Class/getMethod"/>
<hotspotTest classname="NullInParamList" package="openJDKtests.lang.Class.getMethod" outdir="${expected.dir}/lang/Class/getMethod"/>
<hotspotTest classname="ForInnerClass" package="openJDKtests.lang.Class.getModifiers" outdir="${expected.dir}/lang/Class/getModifiers"/>
<hotspotTest classname="ForStaticInnerClass" package="openJDKtests.lang.Class.getModifiers" outdir="${expected.dir}/lang/Class/getModifiers"/>
<hotspotTest classname="ResolveFrom" package="openJDKtests.lang.Class.getModifiers" outdir="${expected.dir}/lang/Class/getModifiers"/>
<hotspotTest classname="StripACC_SUPER" package="openJDKtests.lang.Class.getModifiers" outdir="${expected.dir}/lang/Class/getModifiers"/>
<hotspotTest classname="Sanity" package="openJDKtests.lang.Class.getDeclaredClasses" outdir="${expected.dir}/lang/Class/getDeclaredClasses"/>
<hotspotTest classname="EnclosingMethodTests" package="openJDKtests.lang.Class.getEnclosingMethod" outdir="${expected.dir}/lang/Class/getEnclosingMethod"/>
<hotspotTest classname="Sanity" package="openJDKtests.lang.Class.getDeclaringClass" outdir="${expected.dir}/lang/Class/getDeclaringClass"/>
<hotspotTest classname="Exceptions" package="openJDKtests.lang.Class.getDeclaredMethod" outdir="${expected.dir}/lang/Class/getDeclaredMethod"/>
<hotspotTest classname="IsAnnotationType" package="openJDKtests.lang.Class" outdir="${expected.dir}/lang/Class"/>
<hotspotTest classname="Exceptions" package="openJDKtests.lang.Class.getDeclaredField" outdir="${expected.dir}/lang/Class/getDeclaredField"/>
<hotspotTest classname="NonPublicStaticInitializer" package="openJDKtests.lang.Class.getMethods" outdir="${expected.dir}/lang/Class/getMethods"/>
<hotspotTest classname="StarInheritance" package="openJDKtests.lang.Class.getMethods" outdir="${expected.dir}/lang/Class/getMethods"/>
<hotspotTest classname="Exceptions" package="openJDKtests.lang.Class.getField" outdir="${expected.dir}/lang/Class/getField"/>
<hotspotTest classname="Replace" package="openJDKtests.lang.StringBuffer" outdir="${expected.dir}/lang/StringBuffer"/>
<hotspotTest classname="AppendCharSequence" package="openJDKtests.lang.StringBuffer" outdir="${expected.dir}/lang/StringBuffer"/>
<hotspotTest classname="GetCharsSrcEndLarger" package="openJDKtests.lang.StringBuffer" outdir="${expected.dir}/lang/StringBuffer"/>
<hotspotTest classname="Substring" package="openJDKtests.lang.StringBuffer" outdir="${expected.dir}/lang/StringBuffer"/>
<hotspotTest classname="InsertNullString" package="openJDKtests.lang.StringBuffer" outdir="${expected.dir}/lang/StringBuffer"/>
<hotspotTest classname="Exceptions" package="openJDKtests.lang.StringBuffer" outdir="${expected.dir}/lang/StringBuffer"/>
<hotspotTest classname="SetLength" package="openJDKtests.lang.StringBuffer" outdir="${expected.dir}/lang/StringBuffer"/>
<hotspotTest classname="AppendSB" package="openJDKtests.lang.StringBuffer" outdir="${expected.dir}/lang/StringBuffer"/>
<hotspotTest classname="InsertMaxValue" package="openJDKtests.lang.StringBuffer" outdir="${expected.dir}/lang/StringBuffer"/>
<hotspotTest classname="SBBasher" package="openJDKtests.lang.StringBuffer" outdir="${expected.dir}/lang/StringBuffer"/>
<hotspotTest classname="Supplementary" package="openJDKtests.lang.StringBuffer" outdir="${expected.dir}/lang/StringBuffer"/>
<hotspotTest classname="IndexOf" package="openJDKtests.lang.StringBuffer" outdir="${expected.dir}/lang/StringBuffer"/>
<hotspotTest classname="GetCharsOverLength" package="openJDKtests.lang.StringBuffer" outdir="${expected.dir}/lang/StringBuffer"/>
<hotspotTest classname="Trim" package="openJDKtests.lang.StringBuffer" outdir="${expected.dir}/lang/StringBuffer"/>
<hotspotTest classname="Extrema" package="openJDKtests.lang.Double" outdir="${expected.dir}/lang/Double"/>
<hotspotTest classname="Constants" package="openJDKtests.lang.Double" outdir="${expected.dir}/lang/Double"/>
<hotspotTest classname="NaNInfinityParsing" package="openJDKtests.lang.Double" outdir="${expected.dir}/lang/Double"/>
<hotspotTest classname="NonCharacterMapping" package="openJDKtests.lang.String" outdir="${expected.dir}/lang/String"/>
<hotspotTest classname="CaseConvertSameInstance" package="openJDKtests.lang.String" outdir="${expected.dir}/lang/String"/>
<hotspotTest classname="SBConstructor" package="openJDKtests.lang.String" outdir="${expected.dir}/lang/String"/>
<hotspotTest classname="ICCBasher" package="openJDKtests.lang.String" outdir="${expected.dir}/lang/String"/>
<hotspotTest classname="ToLowerCase" package="openJDKtests.lang.String" outdir="${expected.dir}/lang/String"/>
<hotspotTest classname="IsEmpty" package="openJDKtests.lang.String" outdir="${expected.dir}/lang/String"/>
<hotspotTest classname="ToUpperCase" package="openJDKtests.lang.String" outdir="${expected.dir}/lang/String"/>
<hotspotTest classname="Regex" package="openJDKtests.lang.String" outdir="${expected.dir}/lang/String"/>
<hotspotTest classname="Encodings" package="openJDKtests.lang.String" outdir="${expected.dir}/lang/String"/>
<hotspotTest classname="Supplementary" package="openJDKtests.lang.String" outdir="${expected.dir}/lang/String"/>
<hotspotTest classname="CompareIC" package="openJDKtests.lang.String" outdir="${expected.dir}/lang/String"/>
<hotspotTest classname="RegionMatches" package="openJDKtests.lang.String" outdir="${expected.dir}/lang/String"/>
<hotspotTest classname="Split" package="openJDKtests.lang.String" outdir="${expected.dir}/lang/String"/>
<hotspotTest classname="ContentEquals" package="openJDKtests.lang.String" outdir="${expected.dir}/lang/String"/>
<hotspotTest classname="IndexOfEmptyInEmpty" package="openJDKtests.lang.String" outdir="${expected.dir}/lang/String"/>
<hotspotTest classname="NullQueue" package="openJDKtests.lang.ref" outdir="${expected.dir}/lang/ref"/>
<hotspotTest classname="Bash" package="openJDKtests.lang.ref.SoftReference" outdir="${expected.dir}/lang/ref/SoftReference"/>
<hotspotTest classname="EnqueueNullRef" package="openJDKtests.lang.ref" outdir="${expected.dir}/lang/ref"/>
<hotspotTest classname="Insert" package="openJDKtests.lang.StringBuilder" outdir="${expected.dir}/lang/StringBuilder"/>
<hotspotTest classname="Exceptions" package="openJDKtests.lang.StringBuilder" outdir="${expected.dir}/lang/StringBuilder"/>
<hotspotTest classname="Supplementary" package="openJDKtests.lang.StringBuilder" outdir="${expected.dir}/lang/StringBuilder"/>
<hotspotTest classname="ITLRemoveTest" package="openJDKtests.lang.InheritableThreadLocal" outdir="${expected.dir}/lang/InheritableThreadLocal"/>
<hotspotTest classname="Basic" package="openJDKtests.lang.InheritableThreadLocal" outdir="${expected.dir}/lang/InheritableThreadLocal"/>
<hotspotTest classname="ParseBoolean" package="openJDKtests.lang.Boolean" outdir="${expected.dir}/lang/Boolean"/>
<hotspotTest classname="Factory" package="openJDKtests.lang.Boolean" outdir="${expected.dir}/lang/Boolean"/>
<hotspotTest classname="MakeBooleanComparable" package="openJDKtests.lang.Boolean" outdir="${expected.dir}/lang/Boolean"/>
<hotspotTest classname="GetBoolean" package="openJDKtests.lang.Boolean" outdir="${expected.dir}/lang/Boolean"/>
<hotspotTest classname="SetMaxPriority" package="openJDKtests.lang.ThreadGroup" outdir="${expected.dir}/lang/ThreadGroup"/>
<hotspotTest classname="Stop" package="openJDKtests.lang.ThreadGroup" outdir="${expected.dir}/lang/ThreadGroup"/>
<hotspotTest classname="Daemon" package="openJDKtests.lang.ThreadGroup" outdir="${expected.dir}/lang/ThreadGroup"/>
<hotspotTest classname="Basic" package="openJDKtests.lang.Appendable" outdir="${expected.dir}/lang/Appendable"/>
<hotspotTest classname="RoundingModeTests" package="openJDKtests.math.RoundingMode" outdir="${expected.dir}/math/RoundingMode"/>
<hotspotTest classname="NegateTests" package="openJDKtests.math.BigDecimal" outdir="${expected.dir}/math/BigDecimal"/>
<hotspotTest classname="StrippingZerosTest" package="openJDKtests.math.BigDecimal" outdir="${expected.dir}/math/BigDecimal"/>
<hotspotTest classname="DivideTests" package="openJDKtests.math.BigDecimal" outdir="${expected.dir}/math/BigDecimal"/>
<hotspotTest classname="ZeroScalingTests" package="openJDKtests.math.BigDecimal" outdir="${expected.dir}/math/BigDecimal"/>
<hotspotTest classname="AddTests" package="openJDKtests.math.BigDecimal" outdir="${expected.dir}/math/BigDecimal"/>
<hotspotTest classname="RoundingTests" package="openJDKtests.math.BigDecimal" outdir="${expected.dir}/math/BigDecimal"/>
<hotspotTest classname="IntegralDivisionTests" package="openJDKtests.math.BigDecimal" outdir="${expected.dir}/math/BigDecimal"/>
<hotspotTest classname="CompareToTests" package="openJDKtests.math.BigDecimal" outdir="${expected.dir}/math/BigDecimal"/>
<hotspotTest classname="MultiplyTests" package="openJDKtests.math.BigDecimal" outdir="${expected.dir}/math/BigDecimal"/>
<hotspotTest classname="Constructor" package="openJDKtests.math.BigDecimal" outdir="${expected.dir}/math/BigDecimal"/>
<hotspotTest classname="ScaleByPowerOfTenTests" package="openJDKtests.math.BigDecimal" outdir="${expected.dir}/math/BigDecimal"/>
<hotspotTest classname="SerializationTests" package="openJDKtests.math.BigDecimal" outdir="${expected.dir}/math/BigDecimal"/>
<hotspotTest classname="PowTests" package="openJDKtests.math.BigDecimal" outdir="${expected.dir}/math/BigDecimal"/>
<hotspotTest classname="FloatDoubleValueTests" package="openJDKtests.math.BigDecimal" outdir="${expected.dir}/math/BigDecimal"/>
<hotspotTest classname="ToPlainStringTests" package="openJDKtests.math.BigDecimal" outdir="${expected.dir}/math/BigDecimal"/>
<hotspotTest classname="ProbablePrime" package="openJDKtests.math.BigInteger" outdir="${expected.dir}/math/BigInteger"/>
<hotspotTest classname="ModPow" package="openJDKtests.math.BigInteger" outdir="${expected.dir}/math/BigInteger"/>
<hotspotTest classname="OperatorNpeTests" package="openJDKtests.math.BigInteger" outdir="${expected.dir}/math/BigInteger"/>
<hotspotTest classname="BigIntegerTest" package="openJDKtests.math.BigInteger" outdir="${expected.dir}/math/BigInteger"/>
<hotspotTest classname="UnicodeConstructor" package="openJDKtests.math.BigInteger" outdir="${expected.dir}/math/BigInteger"/>
<hotspotTest classname="Constructors" package="openJDKtests.util.IllegalFormatException" outdir="${expected.dir}/util/IllegalFormatException"/>
<hotspotTest classname="Basic" package="openJDKtests.util.LinkedHashMap" outdir="${expected.dir}/util/LinkedHashMap"/>
<hotspotTest classname="Cache" package="openJDKtests.util.LinkedHashMap" outdir="${expected.dir}/util/LinkedHashMap"/>
<hotspotTest classname="EmptyMapIterator" package="openJDKtests.util.LinkedHashMap" outdir="${expected.dir}/util/LinkedHashMap"/>
<hotspotTest classname="Bug4512215" package="openJDKtests.util.Currency" outdir="${expected.dir}/util/Currency"/>
<hotspotTest classname="IteratorAtEnd" package="openJDKtests.util.Collection" outdir="${expected.dir}/util/Collection"/>
<hotspotTest classname="BiggernYours" package="openJDKtests.util.Collection" outdir="${expected.dir}/util/Collection"/>
<hotspotTest classname="RemoveContains" package="openJDKtests.util.PriorityQueue" outdir="${expected.dir}/util/PriorityQueue"/>
<hotspotTest classname="ForgetMeNot" package="openJDKtests.util.PriorityQueue" outdir="${expected.dir}/util/PriorityQueue"/>
<hotspotTest classname="PriorityQueueSort" package="openJDKtests.util.PriorityQueue" outdir="${expected.dir}/util/PriorityQueue"/>
<hotspotTest classname="Basic" package="openJDKtests.util.LinkedHashSet" outdir="${expected.dir}/util/LinkedHashSet"/>
<hotspotTest classname="ListTimeZones" package="openJDKtests.util.TimeZone" outdir="${expected.dir}/util/TimeZone"/>
<hotspotTest classname="AddAll" package="openJDKtests.util.ArrayList" outdir="${expected.dir}/util/ArrayList"/>
<hotspotTest classname="Bug6533203" package="openJDKtests.util.ArrayList" outdir="${expected.dir}/util/ArrayList"/>
<hotspotTest classname="ToString" package="openJDKtests.util.AbstractCollection" outdir="${expected.dir}/util/AbstractCollection"/>
<hotspotTest classname="ReadObject" package="openJDKtests.util.Hashtable" outdir="${expected.dir}/util/Hashtable"/>
<hotspotTest classname="EqualsCast" package="openJDKtests.util.Hashtable" outdir="${expected.dir}/util/Hashtable"/>
<hotspotTest classname="HashCode" package="openJDKtests.util.Hashtable" outdir="${expected.dir}/util/Hashtable"/>
<hotspotTest classname="IllegalLoadFactor" package="openJDKtests.util.Hashtable" outdir="${expected.dir}/util/Hashtable"/>
<hotspotTest classname="ClearChanged" package="openJDKtests.util.Observable" outdir="${expected.dir}/util/Observable"/>
<hotspotTest classname="ReverseOrder" package="openJDKtests.util.Collections" outdir="${expected.dir}/util/Collections"/>
<hotspotTest classname="NullComparator" package="openJDKtests.util.Collections" outdir="${expected.dir}/util/Collections"/>
<hotspotTest classname="CheckedSetBash" package="openJDKtests.util.Collections" outdir="${expected.dir}/util/Collections"/>
<hotspotTest classname="T6433170" package="openJDKtests.util.Collections" outdir="${expected.dir}/util/Collections"/>
<hotspotTest classname="CheckedMapBash" package="openJDKtests.util.Collections" outdir="${expected.dir}/util/Collections"/>
<hotspotTest classname="Swap" package="openJDKtests.util.Collections" outdir="${expected.dir}/util/Collections"/>
<hotspotTest classname="BigBinarySearch" package="openJDKtests.util.Collections" outdir="${expected.dir}/util/Collections"/>
<hotspotTest classname="BinarySearchNullComparator" package="openJDKtests.util.Collections" outdir="${expected.dir}/util/Collections"/>
<hotspotTest classname="AsLifoQueue" package="openJDKtests.util.Collections" outdir="${expected.dir}/util/Collections"/>
<hotspotTest classname="Ser" package="openJDKtests.util.Collections" outdir="${expected.dir}/util/Collections"/>
<hotspotTest classname="ReverseOrder2" package="openJDKtests.util.Collections" outdir="${expected.dir}/util/Collections"/>
<hotspotTest classname="WrappedNull" package="openJDKtests.util.Collections" outdir="${expected.dir}/util/Collections"/>
<hotspotTest classname="FindSubList" package="openJDKtests.util.Collections" outdir="${expected.dir}/util/Collections"/>
<hotspotTest classname="RotateEmpty" package="openJDKtests.util.Collections" outdir="${expected.dir}/util/Collections"/>
<hotspotTest classname="CheckedNull" package="openJDKtests.util.Collections" outdir="${expected.dir}/util/Collections"/>
<hotspotTest classname="ViewSynch" package="openJDKtests.util.Collections" outdir="${expected.dir}/util/Collections"/>
<hotspotTest classname="AddAll" package="openJDKtests.util.Collections" outdir="${expected.dir}/util/Collections"/>
<hotspotTest classname="CheckedListBash" package="openJDKtests.util.Collections" outdir="${expected.dir}/util/Collections"/>
<hotspotTest classname="NCopies" package="openJDKtests.util.Collections" outdir="${expected.dir}/util/Collections"/>
<hotspotTest classname="MinMax" package="openJDKtests.util.Collections" outdir="${expected.dir}/util/Collections"/>
<hotspotTest classname="ReplaceAll" package="openJDKtests.util.Collections" outdir="${expected.dir}/util/Collections"/>
<hotspotTest classname="Rotate" package="openJDKtests.util.Collections" outdir="${expected.dir}/util/Collections"/>
<hotspotTest classname="Enum" package="openJDKtests.util.Collections" outdir="${expected.dir}/util/Collections"/>
<hotspotTest classname="Disjoint" package="openJDKtests.util.Collections" outdir="${expected.dir}/util/Collections"/>
<hotspotTest classname="Frequency" package="openJDKtests.util.Collections" outdir="${expected.dir}/util/Collections"/>
<hotspotTest classname="SetFromMap" package="openJDKtests.util.Collections" outdir="${expected.dir}/util/Collections"/>
<hotspotTest classname="EmptyCollectionSerialization" package="openJDKtests.util.Collections" outdir="${expected.dir}/util/Collections"/>
<hotspotTest classname="SimpleEntries" package="openJDKtests.util.AbstractMap" outdir="${expected.dir}/util/AbstractMap"/>
<hotspotTest classname="AbstractMapClone" package="openJDKtests.util.AbstractMap" outdir="${expected.dir}/util/AbstractMap"/>
<hotspotTest classname="Equals" package="openJDKtests.util.AbstractMap" outdir="${expected.dir}/util/AbstractMap"/>
<hotspotTest classname="ToString" package="openJDKtests.util.AbstractMap" outdir="${expected.dir}/util/AbstractMap"/>
<hotspotTest classname="ArrayObjectMethods" package="openJDKtests.util.Arrays" outdir="${expected.dir}/util/Arrays"/>
<hotspotTest classname="Big" package="openJDKtests.util.Arrays" outdir="${expected.dir}/util/Arrays"/>
<hotspotTest classname="Correct" package="openJDKtests.util.Arrays" outdir="${expected.dir}/util/Arrays"/>
<hotspotTest classname="Fill" package="openJDKtests.util.Arrays" outdir="${expected.dir}/util/Arrays"/>
<hotspotTest classname="CopyMethods" package="openJDKtests.util.Arrays" outdir="${expected.dir}/util/Arrays"/>
<hotspotTest classname="ZeroInitCap" package="openJDKtests.util.WeakHashMap" outdir="${expected.dir}/util/WeakHashMap"/>
<hotspotTest classname="Iteration" package="openJDKtests.util.WeakHashMap" outdir="${expected.dir}/util/WeakHashMap"/>
<hotspotTest classname="StockName" package="openJDKtests.util.Formattable" outdir="${expected.dir}/util/Formattable"/>
<hotspotTest classname="ToArray" package="openJDKtests.util.EnumMap" outdir="${expected.dir}/util/EnumMap"/>
<hotspotTest classname="EnumMapBash" package="openJDKtests.util.EnumMap" outdir="${expected.dir}/util/EnumMap"/>
<hotspotTest classname="ToArray" package="openJDKtests.util.IdentityHashMap" outdir="${expected.dir}/util/IdentityHashMap"/>
<hotspotTest classname="ResetPos" package="openJDKtests.util.StringTokenizer" outdir="${expected.dir}/util/StringTokenizer"/>
<hotspotTest classname="FormFeed" package="openJDKtests.util.StringTokenizer" outdir="${expected.dir}/util/StringTokenizer"/>
<hotspotTest classname="Supplementary" package="openJDKtests.util.StringTokenizer" outdir="${expected.dir}/util/StringTokenizer"/>
<hotspotTest classname="ChorusLine" package="openJDKtests.util.Deque" outdir="${expected.dir}/util/Deque"/>
<hotspotTest classname="SubMapClear" package="openJDKtests.util.TreeMap" outdir="${expected.dir}/util/TreeMap"/>
<hotspotTest classname="SubMap" package="openJDKtests.util.TreeMap" outdir="${expected.dir}/util/TreeMap"/>
<hotspotTest classname="NullAtEnd" package="openJDKtests.util.TreeMap" outdir="${expected.dir}/util/TreeMap"/>
<hotspotTest classname="HeadTailTypeError" package="openJDKtests.util.TreeMap" outdir="${expected.dir}/util/TreeMap"/>
<hotspotTest classname="ContainsValue" package="openJDKtests.util.TreeMap" outdir="${expected.dir}/util/TreeMap"/>
<hotspotTest classname="JumboRange" package="openJDKtests.util.EnumSet" outdir="${expected.dir}/util/EnumSet"/>
<hotspotTest classname="EnumSetBash" package="openJDKtests.util.EnumSet" outdir="${expected.dir}/util/EnumSet"/>
<hotspotTest classname="AllOf" package="openJDKtests.util.EnumSet" outdir="${expected.dir}/util/EnumSet"/>
<hotspotTest classname="InsertWrongType" package="openJDKtests.util.EnumSet" outdir="${expected.dir}/util/EnumSet"/>
<hotspotTest classname="RetainAll" package="openJDKtests.util.EnumSet" outdir="${expected.dir}/util/EnumSet"/>
<hotspotTest classname="Range" package="openJDKtests.util.EnumSet" outdir="${expected.dir}/util/EnumSet"/>
<hotspotTest classname="ComplementOf" package="openJDKtests.util.EnumSet" outdir="${expected.dir}/util/EnumSet"/>
<hotspotTest classname="BogusEnumSet" package="openJDKtests.util.EnumSet" outdir="${expected.dir}/util/EnumSet"/>
<hotspotTest classname="EndOfDay" package="openJDKtests.util.SimpleTimeZone" outdir="${expected.dir}/util/SimpleTimeZone"/>
<hotspotTest classname="StickySize" package="openJDKtests.util.BitSet" outdir="${expected.dir}/util/BitSet"/>
<hotspotTest classname="And" package="openJDKtests.util.BitSet" outdir="${expected.dir}/util/BitSet"/>
<hotspotTest classname="MemoryLeak" package="openJDKtests.util.BitSet" outdir="${expected.dir}/util/BitSet"/>
<hotspotTest classname="BSMethods" package="openJDKtests.util.BitSet" outdir="${expected.dir}/util/BitSet"/>
<hotspotTest classname="AddAll" package="openJDKtests.util.AbstractSequentialList" outdir="${expected.dir}/util/AbstractSequentialList"/>
<hotspotTest classname="SetValue" package="openJDKtests.util.HashMap" outdir="${expected.dir}/util/HashMap"/>
<hotspotTest classname="KeySetRemove" package="openJDKtests.util.HashMap" outdir="${expected.dir}/util/HashMap"/>
<hotspotTest classname="Get" package="openJDKtests.util.Map" outdir="${expected.dir}/util/Map"/>
<hotspotTest classname="NextBytes" package="openJDKtests.util.Random" outdir="${expected.dir}/util/Random"/>
<hotspotTest classname="NextIntPowerOfTwoMod" package="openJDKtests.util.Random" outdir="${expected.dir}/util/Random"/>
<hotspotTest classname="DistinctSeeds" package="openJDKtests.util.Random" outdir="${expected.dir}/util/Random"/>
<hotspotTest classname="UUIDTest" package="openJDKtests.util.UUID" outdir="${expected.dir}/util/UUID"/>
<hotspotTest classname="Serial" package="openJDKtests.util.UUID" outdir="${expected.dir}/util/UUID"/>
<hotspotTest classname="Remove" package="openJDKtests.util.LinkedList" outdir="${expected.dir}/util/LinkedList"/>
<hotspotTest classname="AddAll" package="openJDKtests.util.LinkedList" outdir="${expected.dir}/util/LinkedList"/>
<hotspotTest classname="Clone" package="openJDKtests.util.LinkedList" outdir="${expected.dir}/util/LinkedList"/>
<hotspotTest classname="ComodifiedRemove" package="openJDKtests.util.LinkedList" outdir="${expected.dir}/util/LinkedList"/>
<hotspotTest classname="HasNextAfterException" package="openJDKtests.util.AbstractList" outdir="${expected.dir}/util/AbstractList"/>
<hotspotTest classname="FailFastIterator" package="openJDKtests.util.AbstractList" outdir="${expected.dir}/util/AbstractList"/>
<hotspotTest classname="CopyInto" package="openJDKtests.util.Vector" outdir="${expected.dir}/util/Vector"/>
<hotspotTest classname="IllegalConstructorArgs" package="openJDKtests.util.Vector" outdir="${expected.dir}/util/Vector"/>
<hotspotTest classname="SyncLastIndexOf" package="openJDKtests.util.Vector" outdir="${expected.dir}/util/Vector"/>
<hotspotTest classname="ComodifiedRemoveAllElements" package="openJDKtests.util.Vector" outdir="${expected.dir}/util/Vector"/>
<hotspotTest classname="LastIndexOf" package="openJDKtests.util.Vector" outdir="${expected.dir}/util/Vector"/>


	<!-- Comparison -->

	<startResults/>
<runCompareTest tag="StackTraceSerialization" class="openJDKtests.lang.Throwable.StackTraceSerialization" expecteddir="expected" classpath="${openjdk.jar.dir}/${openjdk.jar.filename}"/>
<runCompareTest tag="LocalizedMessage" class="openJDKtests.lang.Throwable.LocalizedMessage" expecteddir="expected" classpath="${openjdk.jar.dir}/${openjdk.jar.filename}"/>
<runCompareTest tag="LegacyChainedExceptionSerialization" class="openJDKtests.lang.Throwable.LegacyChainedExceptionSerialization" expecteddir="expected" classpath="${openjdk.jar.dir}/${openjdk.jar.filename}"/>
<runCompareTest tag="ChainedExceptions" class="openJDKtests.lang.Throwable.ChainedExceptions" expecteddir="expected" classpath="${openjdk.jar.dir}/${openjdk.jar.filename}"/>
<runCompareTest tag="NewChainedExceptions" class="openJDKtests.lang.Throwable.NewChainedExceptions" expecteddir="expected" classpath="${openjdk.jar.dir}/${openjdk.jar.filename}"/>
<runCompareTest tag="ParseFloat" class="openJDKtests.lang.Float.ParseFloat" expecteddir="expected" classpath="${openjdk.jar.dir}/${openjdk.jar.filename}"/>
<runCompareTest tag="Extrema" class="openJDKtests.lang.Float.Extrema" expecteddir="expected" classpath="${openjdk.jar.dir}/${openjdk.jar.filename}"/>
<runCompareTest tag="Constants" class="openJDKtests.lang.Float.Constants" expecteddir="expected" classpath="${openjdk.jar.dir}/${openjdk.jar.filename}"/>
<runCompareTest tag="NaNInfinityParsing" class="openJDKtests.lang.Float.NaNInfinityParsing" expecteddir="expected" classpath="${openjdk.jar.dir}/${openjdk.jar.filename}"/>
<runCompareTest tag="TestThreadId" class="openJDKtests.lang.ThreadLocal.TestThreadId" expecteddir="expected" classpath="${openjdk.jar.dir}/${openjdk.jar.filename}"/>
<runCompareTest tag="MemoryLeak" class="openJDKtests.lang.ThreadLocal.MemoryLeak" expecteddir="expected" classpath="${openjdk.jar.dir}/${openjdk.jar.filename}"/>
<runCompareTest tag="Basic" class="openJDKtests.lang.ThreadLocal.Basic" expecteddir="expected" classpath="${openjdk.jar.dir}/${openjdk.jar.filename}"/>
<runCompareTest tag="InitialValue" class="openJDKtests.lang.ThreadLocal.InitialValue" expecteddir="expected" classpath="${openjdk.jar.dir}/${openjdk.jar.filename}"/>
<runCompareTest tag="ThreadId" class="openJDKtests.lang.ThreadLocal.ThreadId" expecteddir="expected" classpath="${openjdk.jar.dir}/${openjdk.jar.filename}"/>
<runCompareTest tag="TLRemoveTest" class="openJDKtests.lang.ThreadLocal.TLRemoveTest" expecteddir="expected" classpath="${openjdk.jar.dir}/${openjdk.jar.filename}"/>
<runCompareTest tag="BitTwiddle" class="openJDKtests.lang.Integer.BitTwiddle" expecteddir="expected" classpath="${openjdk.jar.dir}/${openjdk.jar.filename}"/>
<runCompareTest tag="ParsingTest" class="openJDKtests.lang.Integer.ParsingTest" expecteddir="expected" classpath="${openjdk.jar.dir}/${openjdk.jar.filename}"/>
<runCompareTest tag="GetInteger" class="openJDKtests.lang.Integer.GetInteger" expecteddir="expected" classpath="${openjdk.jar.dir}/${openjdk.jar.filename}"/>
<runCompareTest tag="Decode" class="openJDKtests.lang.Integer.Decode" expecteddir="expected" classpath="${openjdk.jar.dir}/${openjdk.jar.filename}"/>
<runCompareTest tag="ByteSwap" class="openJDKtests.lang.Short.ByteSwap" expecteddir="expected" classpath="${openjdk.jar.dir}/${openjdk.jar.filename}"/>
<runCompareTest tag="Decode" class="openJDKtests.lang.Short.Decode" expecteddir="expected" classpath="${openjdk.jar.dir}/${openjdk.jar.filename}"/>
<runCompareTest tag="GetLong" class="openJDKtests.lang.Long.GetLong" expecteddir="expected" classpath="${openjdk.jar.dir}/${openjdk.jar.filename}"/>
<runCompareTest tag="BitTwiddle" class="openJDKtests.lang.Long.BitTwiddle" expecteddir="expected" classpath="${openjdk.jar.dir}/${openjdk.jar.filename}"/>
<runCompareTest tag="ParsingTest" class="openJDKtests.lang.Long.ParsingTest" expecteddir="expected" classpath="${openjdk.jar.dir}/${openjdk.jar.filename}"/>
<runCompareTest tag="Decode" class="openJDKtests.lang.Long.Decode" expecteddir="expected" classpath="${openjdk.jar.dir}/${openjdk.jar.filename}"/>
<runCompareTest tag="Expm1Tests" class="openJDKtests.lang.StrictMath.Expm1Tests" expecteddir="expected" classpath="${openjdk.jar.dir}/${openjdk.jar.filename}"/>
<runCompareTest tag="Tests" class="openJDKtests.lang.StrictMath.Tests" expecteddir="expected" classpath="${openjdk.jar.dir}/${openjdk.jar.filename}"/>
<runCompareTest tag="CubeRootTests" class="openJDKtests.lang.StrictMath.CubeRootTests" expecteddir="expected" classpath="${openjdk.jar.dir}/${openjdk.jar.filename}"/>
<runCompareTest tag="Log10Tests" class="openJDKtests.lang.StrictMath.Log10Tests" expecteddir="expected" classpath="${openjdk.jar.dir}/${openjdk.jar.filename}"/>
<runCompareTest tag="Log1pTests" class="openJDKtests.lang.StrictMath.Log1pTests" expecteddir="expected" classpath="${openjdk.jar.dir}/${openjdk.jar.filename}"/>
<runCompareTest tag="HyperbolicTests" class="openJDKtests.lang.StrictMath.HyperbolicTests" expecteddir="expected" classpath="${openjdk.jar.dir}/${openjdk.jar.filename}"/>
<runCompareTest tag="HypotTests" class="openJDKtests.lang.StrictMath.HypotTests" expecteddir="expected" classpath="${openjdk.jar.dir}/${openjdk.jar.filename}"/>
<runCompareTest tag="ExceedMaxDim" class="openJDKtests.lang.reflect.Array.ExceedMaxDim" expecteddir="expected" classpath="${openjdk.jar.dir}/${openjdk.jar.filename}"/>
<runCompareTest tag="TestParameterAnnotations" class="openJDKtests.lang.reflect.Constructor.TestParameterAnnotations" expecteddir="expected" classpath="${openjdk.jar.dir}/${openjdk.jar.filename}"/>
<runCompareTest tag="Set" class="openJDKtests.lang.reflect.Field.Set" expecteddir="expected" classpath="${openjdk.jar.dir}/${openjdk.jar.filename}"/>
<runCompareTest tag="StaticFieldTest" class="openJDKtests.lang.reflect.Field.eightsixfour.StaticFieldTest" expecteddir="expected" classpath="${openjdk.jar.dir}/${openjdk.jar.filename}"/>
<runCompareTest tag="toStringTest" class="openJDKtests.lang.reflect.Modifier.toStringTest" expecteddir="expected" classpath="${openjdk.jar.dir}/${openjdk.jar.filename}"/>
<runCompareTest tag="ArrayAssignment" class="openJDKtests.lang.reflect.Assignment.ArrayAssignment" expecteddir="expected" classpath="${openjdk.jar.dir}/${openjdk.jar.filename}"/>
<runCompareTest tag="exceptionCauseTest" class="openJDKtests.lang.reflect.Generics.exceptionCauseTest" expecteddir="expected" classpath="${openjdk.jar.dir}/${openjdk.jar.filename}"/>
<runCompareTest tag="getAnnotationTest" class="openJDKtests.lang.reflect.Generics.getAnnotationTest" expecteddir="expected" classpath="${openjdk.jar.dir}/${openjdk.jar.filename}"/>
<runCompareTest tag="Probe" class="openJDKtests.lang.reflect.Generics.Probe" expecteddir="expected" classpath="${openjdk.jar.dir}/${openjdk.jar.filename}"/>
<runCompareTest tag="StringsAndBounds" class="openJDKtests.lang.reflect.Generics.StringsAndBounds" expecteddir="expected" classpath="${openjdk.jar.dir}/${openjdk.jar.filename}"/>
<runCompareTest tag="TestC1" class="openJDKtests.lang.reflect.Generics.TestC1" expecteddir="expected" classpath="${openjdk.jar.dir}/${openjdk.jar.filename}"/>
<runCompareTest tag="TestC2" class="openJDKtests.lang.reflect.Generics.TestC2" expecteddir="expected" classpath="${openjdk.jar.dir}/${openjdk.jar.filename}"/>
<runCompareTest tag="TestN1" class="openJDKtests.lang.reflect.Generics.TestN1" expecteddir="expected" classpath="${openjdk.jar.dir}/${openjdk.jar.filename}"/>
<runCompareTest tag="TestParameterizedType" class="openJDKtests.lang.reflect.Generics.TestParameterizedType" expecteddir="expected" classpath="${openjdk.jar.dir}/${openjdk.jar.filename}"/>
<runCompareTest tag="Boxing" class="openJDKtests.lang.reflect.Proxy.Boxing" expecteddir="expected" classpath="${openjdk.jar.dir}/${openjdk.jar.filename}"/>
<runCompareTest tag="CharType" class="openJDKtests.lang.reflect.Proxy.CharType" expecteddir="expected" classpath="${openjdk.jar.dir}/${openjdk.jar.filename}"/>
<runCompareTest tag="ClassRestrictions" class="openJDKtests.lang.reflect.Proxy.ClassRestrictions" expecteddir="expected" classpath="${openjdk.jar.dir}/${openjdk.jar.filename}"/>
<runCompareTest tag="Test" class="openJDKtests.lang.reflect.Proxy.returnTypes.Test" expecteddir="expected" classpath="${openjdk.jar.dir}/${openjdk.jar.filename}"/>
<runCompareTest tag="InheritedInterfaceMethods" class="openJDKtests.lang.reflect.Method.InheritedInterfaceMethods" expecteddir="expected" classpath="${openjdk.jar.dir}/${openjdk.jar.filename}"/>
<runCompareTest tag="ErrorInInvoke" class="openJDKtests.lang.reflect.Method.invoke.ErrorInInvoke" expecteddir="expected" classpath="${openjdk.jar.dir}/${openjdk.jar.filename}"/>
<runCompareTest tag="IllegalAccessInInvoke" class="openJDKtests.lang.reflect.Method.invoke.IllegalAccessInInvoke" expecteddir="expected" classpath="${openjdk.jar.dir}/${openjdk.jar.filename}"/>
<runCompareTest tag="Decode" class="openJDKtests.lang.Byte.Decode" expecteddir="expected" classpath="${openjdk.jar.dir}/${openjdk.jar.filename}"/>
<runCompareTest tag="PublicConstructor" class="openJDKtests.lang.StackTraceElement.PublicConstructor" expecteddir="expected" classpath="${openjdk.jar.dir}/${openjdk.jar.filename}"/>
<runCompareTest tag="Cause" class="openJDKtests.lang.AssertionError.Cause" expecteddir="expected" classpath="${openjdk.jar.dir}/${openjdk.jar.filename}"/>
<runCompareTest tag="Cast" class="openJDKtests.lang.Class.Cast" expecteddir="expected" classpath="${openjdk.jar.dir}/${openjdk.jar.filename}"/>
<runCompareTest tag="IsSynthetic" class="openJDKtests.lang.Class.IsSynthetic" expecteddir="expected" classpath="${openjdk.jar.dir}/${openjdk.jar.filename}"/>
<runCompareTest tag="IsAnnotationType" class="openJDKtests.lang.Class.IsAnnotationType" expecteddir="expected" classpath="${openjdk.jar.dir}/${openjdk.jar.filename}"/>
<runCompareTest tag="Sanity" class="openJDKtests.lang.Class.getClasses.Sanity" expecteddir="expected" classpath="${openjdk.jar.dir}/${openjdk.jar.filename}"/>
<runCompareTest tag="EnclosingConstructorTests" class="openJDKtests.lang.Class.getEnclosingConstructor.EnclosingConstructorTests" expecteddir="expected" classpath="${openjdk.jar.dir}/${openjdk.jar.filename}"/>
<runCompareTest tag="Exceptions" class="openJDKtests.lang.Class.getMethod.Exceptions" expecteddir="expected" classpath="${openjdk.jar.dir}/${openjdk.jar.filename}"/>
<runCompareTest tag="NullInParamList" class="openJDKtests.lang.Class.getMethod.NullInParamList" expecteddir="expected" classpath="${openjdk.jar.dir}/${openjdk.jar.filename}"/>
<runCompareTest tag="ForInnerClass" class="openJDKtests.lang.Class.getModifiers.ForInnerClass" expecteddir="expected" classpath="${openjdk.jar.dir}/${openjdk.jar.filename}"/>
<runCompareTest tag="ForStaticInnerClass" class="openJDKtests.lang.Class.getModifiers.ForStaticInnerClass" expecteddir="expected" classpath="${openjdk.jar.dir}/${openjdk.jar.filename}"/>
<runCompareTest tag="ResolveFrom" class="openJDKtests.lang.Class.getModifiers.ResolveFrom" expecteddir="expected" classpath="${openjdk.jar.dir}/${openjdk.jar.filename}"/>
<runCompareTest tag="StripACC_SUPER" class="openJDKtests.lang.Class.getModifiers.StripACC_SUPER" expecteddir="expected" classpath="${openjdk.jar.dir}/${openjdk.jar.filename}"/>
<runCompareTest tag="Sanity" class="openJDKtests.lang.Class.getDeclaredClasses.Sanity" expecteddir="expected" classpath="${openjdk.jar.dir}/${openjdk.jar.filename}"/>
<runCompareTest tag="EnclosingMethodTests" class="openJDKtests.lang.Class.getEnclosingMethod.EnclosingMethodTests" expecteddir="expected" classpath="${openjdk.jar.dir}/${openjdk.jar.filename}"/>
<runCompareTest tag="Sanity" class="openJDKtests.lang.Class.getDeclaringClass.Sanity" expecteddir="expected" classpath="${openjdk.jar.dir}/${openjdk.jar.filename}"/>
<runCompareTest tag="Exceptions" class="openJDKtests.lang.Class.getDeclaredMethod.Exceptions" expecteddir="expected" classpath="${openjdk.jar.dir}/${openjdk.jar.filename}"/>
<runCompareTest tag="Exceptions" class="openJDKtests.lang.Class.getDeclaredField.Exceptions" expecteddir="expected" classpath="${openjdk.jar.dir}/${openjdk.jar.filename}"/>
<runCompareTest tag="NonPublicStaticInitializer" class="openJDKtests.lang.Class.getMethods.NonPublicStaticInitializer" expecteddir="expected" classpath="${openjdk.jar.dir}/${openjdk.jar.filename}"/>
<runCompareTest tag="StarInheritance" class="openJDKtests.lang.Class.getMethods.StarInheritance" expecteddir="expected" classpath="${openjdk.jar.dir}/${openjdk.jar.filename}"/>
<runCompareTest tag="Exceptions" class="openJDKtests.lang.Class.getField.Exceptions" expecteddir="expected" classpath="${openjdk.jar.dir}/${openjdk.jar.filename}"/>
<runCompareTest tag="Replace" class="openJDKtests.lang.StringBuffer.Replace" expecteddir="expected" classpath="${openjdk.jar.dir}/${openjdk.jar.filename}"/>
<runCompareTest tag="AppendCharSequence" class="openJDKtests.lang.StringBuffer.AppendCharSequence" expecteddir="expected" classpath="${openjdk.jar.dir}/${openjdk.jar.filename}"/>
<runCompareTest tag="GetCharsSrcEndLarger" class="openJDKtests.lang.StringBuffer.GetCharsSrcEndLarger" expecteddir="expected" classpath="${openjdk.jar.dir}/${openjdk.jar.filename}"/>
<runCompareTest tag="Substring" class="openJDKtests.lang.StringBuffer.Substring" expecteddir="expected" classpath="${openjdk.jar.dir}/${openjdk.jar.filename}"/>
<runCompareTest tag="InsertNullString" class="openJDKtests.lang.StringBuffer.InsertNullString" expecteddir="expected" classpath="${openjdk.jar.dir}/${openjdk.jar.filename}"/>
<runCompareTest tag="Exceptions" class="openJDKtests.lang.StringBuffer.Exceptions" expecteddir="expected" classpath="${openjdk.jar.dir}/${openjdk.jar.filename}"/>
<runCompareTest tag="SetLength" class="openJDKtests.lang.StringBuffer.SetLength" expecteddir="expected" classpath="${openjdk.jar.dir}/${openjdk.jar.filename}"/>
<runCompareTest tag="AppendSB" class="openJDKtests.lang.StringBuffer.AppendSB" expecteddir="expected" classpath="${openjdk.jar.dir}/${openjdk.jar.filename}"/>
<runCompareTest tag="InsertMaxValue" class="openJDKtests.lang.StringBuffer.InsertMaxValue" expecteddir="expected" classpath="${openjdk.jar.dir}/${openjdk.jar.filename}"/>
<runCompareTest tag="SBBasher" class="openJDKtests.lang.StringBuffer.SBBasher" expecteddir="expected" classpath="${openjdk.jar.dir}/${openjdk.jar.filename}"/>
<runCompareTest tag="Supplementary" class="openJDKtests.lang.StringBuffer.Supplementary" expecteddir="expected" classpath="${openjdk.jar.dir}/${openjdk.jar.filename}"/>
<runCompareTest tag="IndexOf" class="openJDKtests.lang.StringBuffer.IndexOf" expecteddir="expected" classpath="${openjdk.jar.dir}/${openjdk.jar.filename}"/>
<runCompareTest tag="GetCharsOverLength" class="openJDKtests.lang.StringBuffer.GetCharsOverLength" expecteddir="expected" classpath="${openjdk.jar.dir}/${openjdk.jar.filename}"/>
<runCompareTest tag="Trim" class="openJDKtests.lang.StringBuffer.Trim" expecteddir="expected" classpath="${openjdk.jar.dir}/${openjdk.jar.filename}"/>
<runCompareTest tag="Extrema" class="openJDKtests.lang.Double.Extrema" expecteddir="expected" classpath="${openjdk.jar.dir}/${openjdk.jar.filename}"/>
<runCompareTest tag="Constants" class="openJDKtests.lang.Double.Constants" expecteddir="expected" classpath="${openjdk.jar.dir}/${openjdk.jar.filename}"/>
<runCompareTest tag="NaNInfinityParsing" class="openJDKtests.lang.Double.NaNInfinityParsing" expecteddir="expected" classpath="${openjdk.jar.dir}/${openjdk.jar.filename}"/>
<runCompareTest tag="NonCharacterMapping" class="openJDKtests.lang.String.NonCharacterMapping" expecteddir="expected" classpath="${openjdk.jar.dir}/${openjdk.jar.filename}"/>
<runCompareTest tag="CaseConvertSameInstance" class="openJDKtests.lang.String.CaseConvertSameInstance" expecteddir="expected" classpath="${openjdk.jar.dir}/${openjdk.jar.filename}"/>
<runCompareTest tag="SBConstructor" class="openJDKtests.lang.String.SBConstructor" expecteddir="expected" classpath="${openjdk.jar.dir}/${openjdk.jar.filename}"/>
<runCompareTest tag="ICCBasher" class="openJDKtests.lang.String.ICCBasher" expecteddir="expected" classpath="${openjdk.jar.dir}/${openjdk.jar.filename}"/>
<runCompareTest tag="ToLowerCase" class="openJDKtests.lang.String.ToLowerCase" expecteddir="expected" classpath="${openjdk.jar.dir}/${openjdk.jar.filename}"/>
<runCompareTest tag="IsEmpty" class="openJDKtests.lang.String.IsEmpty" expecteddir="expected" classpath="${openjdk.jar.dir}/${openjdk.jar.filename}"/>
<runCompareTest tag="ToUpperCase" class="openJDKtests.lang.String.ToUpperCase" expecteddir="expected" classpath="${openjdk.jar.dir}/${openjdk.jar.filename}"/>
<runCompareTest tag="Regex" class="openJDKtests.lang.String.Regex" expecteddir="expected" classpath="${openjdk.jar.dir}/${openjdk.jar.filename}"/>
<runCompareTest tag="Encodings" class="openJDKtests.lang.String.Encodings" expecteddir="expected" classpath="${openjdk.jar.dir}/${openjdk.jar.filename}"/>
<runCompareTest tag="Supplementary" class="openJDKtests.lang.String.Supplementary" expecteddir="expected" classpath="${openjdk.jar.dir}/${openjdk.jar.filename}"/>
<runCompareTest tag="CompareIC" class="openJDKtests.lang.String.CompareIC" expecteddir="expected" classpath="${openjdk.jar.dir}/${openjdk.jar.filename}"/>
<runCompareTest tag="RegionMatches" class="openJDKtests.lang.String.RegionMatches" expecteddir="expected" classpath="${openjdk.jar.dir}/${openjdk.jar.filename}"/>
<runCompareTest tag="Split" class="openJDKtests.lang.String.Split" expecteddir="expected" classpath="${openjdk.jar.dir}/${openjdk.jar.filename}"/>
<runCompareTest tag="ContentEquals" class="openJDKtests.lang.String.ContentEquals" expecteddir="expected" classpath="${openjdk.jar.dir}/${openjdk.jar.filename}"/>
<runCompareTest tag="IndexOfEmptyInEmpty" class="openJDKtests.lang.String.IndexOfEmptyInEmpty" expecteddir="expected" classpath="${openjdk.jar.dir}/${openjdk.jar.filename}"/>
<runCompareTest tag="NullQueue" class="openJDKtests.lang.ref.NullQueue" expecteddir="expected" classpath="${openjdk.jar.dir}/${openjdk.jar.filename}"/>
<runCompareTest tag="Bash" class="openJDKtests.lang.ref.SoftReference.Bash" expecteddir="expected" classpath="${openjdk.jar.dir}/${openjdk.jar.filename}"/>
<runCompareTest tag="EnqueueNullRef" class="openJDKtests.lang.ref.EnqueueNullRef" expecteddir="expected" classpath="${openjdk.jar.dir}/${openjdk.jar.filename}"/>
<runCompareTest tag="Insert" class="openJDKtests.lang.StringBuilder.Insert" expecteddir="expected" classpath="${openjdk.jar.dir}/${openjdk.jar.filename}"/>
<runCompareTest tag="Exceptions" class="openJDKtests.lang.StringBuilder.Exceptions" expecteddir="expected" classpath="${openjdk.jar.dir}/${openjdk.jar.filename}"/>
<runCompareTest tag="Supplementary" class="openJDKtests.lang.StringBuilder.Supplementary" expecteddir="expected" classpath="${openjdk.jar.dir}/${openjdk.jar.filename}"/>
<runCompareTest tag="ITLRemoveTest" class="openJDKtests.lang.InheritableThreadLocal.ITLRemoveTest" expecteddir="expected" classpath="${openjdk.jar.dir}/${openjdk.jar.filename}"/>
<runCompareTest tag="Basic" class="openJDKtests.lang.InheritableThreadLocal.Basic" expecteddir="expected" classpath="${openjdk.jar.dir}/${openjdk.jar.filename}"/>
<runCompareTest tag="ParseBoolean" class="openJDKtests.lang.Boolean.ParseBoolean" expecteddir="expected" classpath="${openjdk.jar.dir}/${openjdk.jar.filename}"/>
<runCompareTest tag="Factory" class="openJDKtests.lang.Boolean.Factory" expecteddir="expected" classpath="${openjdk.jar.dir}/${openjdk.jar.filename}"/>
<runCompareTest tag="MakeBooleanComparable" class="openJDKtests.lang.Boolean.MakeBooleanComparable" expecteddir="expected" classpath="${openjdk.jar.dir}/${openjdk.jar.filename}"/>
<runCompareTest tag="GetBoolean" class="openJDKtests.lang.Boolean.GetBoolean" expecteddir="expected" classpath="${openjdk.jar.dir}/${openjdk.jar.filename}"/>
<runCompareTest tag="SetMaxPriority" class="openJDKtests.lang.ThreadGroup.SetMaxPriority" expecteddir="expected" classpath="${openjdk.jar.dir}/${openjdk.jar.filename}"/>
<runCompareTest tag="Stop" class="openJDKtests.lang.ThreadGroup.Stop" expecteddir="expected" classpath="${openjdk.jar.dir}/${openjdk.jar.filename}"/>
<runCompareTest tag="Daemon" class="openJDKtests.lang.ThreadGroup.Daemon" expecteddir="expected" classpath="${openjdk.jar.dir}/${openjdk.jar.filename}"/>
<runCompareTest tag="Basic" class="openJDKtests.lang.Appendable.Basic" expecteddir="expected" classpath="${openjdk.jar.dir}/${openjdk.jar.filename}"/>
<runCompareTest tag="RoundingModeTests" class="openJDKtests.math.RoundingMode.RoundingModeTests" expecteddir="expected" classpath="${openjdk.jar.dir}/${openjdk.jar.filename}"/>
<runCompareTest tag="NegateTests" class="openJDKtests.math.BigDecimal.NegateTests" expecteddir="expected" classpath="${openjdk.jar.dir}/${openjdk.jar.filename}"/>
<runCompareTest tag="StrippingZerosTest" class="openJDKtests.math.BigDecimal.StrippingZerosTest" expecteddir="expected" classpath="${openjdk.jar.dir}/${openjdk.jar.filename}"/>
<runCompareTest tag="DivideTests" class="openJDKtests.math.BigDecimal.DivideTests" expecteddir="expected" classpath="${openjdk.jar.dir}/${openjdk.jar.filename}"/>
<runCompareTest tag="ZeroScalingTests" class="openJDKtests.math.BigDecimal.ZeroScalingTests" expecteddir="expected" classpath="${openjdk.jar.dir}/${openjdk.jar.filename}"/>
<runCompareTest tag="AddTests" class="openJDKtests.math.BigDecimal.AddTests" expecteddir="expected" classpath="${openjdk.jar.dir}/${openjdk.jar.filename}"/>
<runCompareTest tag="RoundingTests" class="openJDKtests.math.BigDecimal.RoundingTests" expecteddir="expected" classpath="${openjdk.jar.dir}/${openjdk.jar.filename}"/>
<runCompareTest tag="IntegralDivisionTests" class="openJDKtests.math.BigDecimal.IntegralDivisionTests" expecteddir="expected" classpath="${openjdk.jar.dir}/${openjdk.jar.filename}"/>
<runCompareTest tag="CompareToTests" class="openJDKtests.math.BigDecimal.CompareToTests" expecteddir="expected" classpath="${openjdk.jar.dir}/${openjdk.jar.filename}"/>
<runCompareTest tag="MultiplyTests" class="openJDKtests.math.BigDecimal.MultiplyTests" expecteddir="expected" classpath="${openjdk.jar.dir}/${openjdk.jar.filename}"/>
<runCompareTest tag="Constructor" class="openJDKtests.math.BigDecimal.Constructor" expecteddir="expected" classpath="${openjdk.jar.dir}/${openjdk.jar.filename}"/>
<runCompareTest tag="ScaleByPowerOfTenTests" class="openJDKtests.math.BigDecimal.ScaleByPowerOfTenTests" expecteddir="expected" classpath="${openjdk.jar.dir}/${openjdk.jar.filename}"/>
<runCompareTest tag="SerializationTests" class="openJDKtests.math.BigDecimal.SerializationTests" expecteddir="expected" classpath="${openjdk.jar.dir}/${openjdk.jar.filename}"/>
<runCompareTest tag="PowTests" class="openJDKtests.math.BigDecimal.PowTests" expecteddir="expected" classpath="${openjdk.jar.dir}/${openjdk.jar.filename}"/>
<runCompareTest tag="FloatDoubleValueTests" class="openJDKtests.math.BigDecimal.FloatDoubleValueTests" expecteddir="expected" classpath="${openjdk.jar.dir}/${openjdk.jar.filename}"/>
<runCompareTest tag="ToPlainStringTests" class="openJDKtests.math.BigDecimal.ToPlainStringTests" expecteddir="expected" classpath="${openjdk.jar.dir}/${openjdk.jar.filename}"/>
<runCompareTest tag="ProbablePrime" class="openJDKtests.math.BigInteger.ProbablePrime" expecteddir="expected" classpath="${openjdk.jar.dir}/${openjdk.jar.filename}"/>
<runCompareTest tag="ModPow" class="openJDKtests.math.BigInteger.ModPow" expecteddir="expected" classpath="${openjdk.jar.dir}/${openjdk.jar.filename}"/>
<runCompareTest tag="OperatorNpeTests" class="openJDKtests.math.BigInteger.OperatorNpeTests" expecteddir="expected" classpath="${openjdk.jar.dir}/${openjdk.jar.filename}"/>
<runCompareTest tag="BigIntegerTest" class="openJDKtests.math.BigInteger.BigIntegerTest" expecteddir="expected" classpath="${openjdk.jar.dir}/${openjdk.jar.filename}"/>
<runCompareTest tag="UnicodeConstructor" class="openJDKtests.math.BigInteger.UnicodeConstructor" expecteddir="expected" classpath="${openjdk.jar.dir}/${openjdk.jar.filename}"/>
<runCompareTest tag="Constructors" class="openJDKtests.util.IllegalFormatException.Constructors" expecteddir="expected" classpath="${openjdk.jar.dir}/${openjdk.jar.filename}"/>
<runCompareTest tag="Basic" class="openJDKtests.util.LinkedHashMap.Basic" expecteddir="expected" classpath="${openjdk.jar.dir}/${openjdk.jar.filename}"/>
<runCompareTest tag="Cache" class="openJDKtests.util.LinkedHashMap.Cache" expecteddir="expected" classpath="${openjdk.jar.dir}/${openjdk.jar.filename}"/>
<runCompareTest tag="EmptyMapIterator" class="openJDKtests.util.LinkedHashMap.EmptyMapIterator" expecteddir="expected" classpath="${openjdk.jar.dir}/${openjdk.jar.filename}"/>
<runCompareTest tag="Bug4512215" class="openJDKtests.util.Currency.Bug4512215" expecteddir="expected" classpath="${openjdk.jar.dir}/${openjdk.jar.filename}"/>
<runCompareTest tag="IteratorAtEnd" class="openJDKtests.util.Collection.IteratorAtEnd" expecteddir="expected" classpath="${openjdk.jar.dir}/${openjdk.jar.filename}"/>
<runCompareTest tag="BiggernYours" class="openJDKtests.util.Collection.BiggernYours" expecteddir="expected" classpath="${openjdk.jar.dir}/${openjdk.jar.filename}"/>
<runCompareTest tag="RemoveContains" class="openJDKtests.util.PriorityQueue.RemoveContains" expecteddir="expected" classpath="${openjdk.jar.dir}/${openjdk.jar.filename}"/>
<runCompareTest tag="ForgetMeNot" class="openJDKtests.util.PriorityQueue.ForgetMeNot" expecteddir="expected" classpath="${openjdk.jar.dir}/${openjdk.jar.filename}"/>
<runCompareTest tag="PriorityQueueSort" class="openJDKtests.util.PriorityQueue.PriorityQueueSort" expecteddir="expected" classpath="${openjdk.jar.dir}/${openjdk.jar.filename}"/>
<runCompareTest tag="Basic" class="openJDKtests.util.LinkedHashSet.Basic" expecteddir="expected" classpath="${openjdk.jar.dir}/${openjdk.jar.filename}"/>
<runCompareTest tag="ListTimeZones" class="openJDKtests.util.TimeZone.ListTimeZones" expecteddir="expected" classpath="${openjdk.jar.dir}/${openjdk.jar.filename}"/>
<runCompareTest tag="AddAll" class="openJDKtests.util.ArrayList.AddAll" expecteddir="expected" classpath="${openjdk.jar.dir}/${openjdk.jar.filename}"/>
<runCompareTest tag="Bug6533203" class="openJDKtests.util.ArrayList.Bug6533203" expecteddir="expected" classpath="${openjdk.jar.dir}/${openjdk.jar.filename}"/>
<runCompareTest tag="ToString" class="openJDKtests.util.AbstractCollection.ToString" expecteddir="expected" classpath="${openjdk.jar.dir}/${openjdk.jar.filename}"/>
<runCompareTest tag="ReadObject" class="openJDKtests.util.Hashtable.ReadObject" expecteddir="expected" classpath="${openjdk.jar.dir}/${openjdk.jar.filename}"/>
<runCompareTest tag="EqualsCast" class="openJDKtests.util.Hashtable.EqualsCast" expecteddir="expected" classpath="${openjdk.jar.dir}/${openjdk.jar.filename}"/>
<runCompareTest tag="HashCode" class="openJDKtests.util.Hashtable.HashCode" expecteddir="expected" classpath="${openjdk.jar.dir}/${openjdk.jar.filename}"/>
<runCompareTest tag="IllegalLoadFactor" class="openJDKtests.util.Hashtable.IllegalLoadFactor" expecteddir="expected" classpath="${openjdk.jar.dir}/${openjdk.jar.filename}"/>
<runCompareTest tag="ClearChanged" class="openJDKtests.util.Observable.ClearChanged" expecteddir="expected" classpath="${openjdk.jar.dir}/${openjdk.jar.filename}"/>
<runCompareTest tag="ReverseOrder" class="openJDKtests.util.Collections.ReverseOrder" expecteddir="expected" classpath="${openjdk.jar.dir}/${openjdk.jar.filename}"/>
<runCompareTest tag="NullComparator" class="openJDKtests.util.Collections.NullComparator" expecteddir="expected" classpath="${openjdk.jar.dir}/${openjdk.jar.filename}"/>
<runCompareTest tag="CheckedSetBash" class="openJDKtests.util.Collections.CheckedSetBash" expecteddir="expected" classpath="${openjdk.jar.dir}/${openjdk.jar.filename}"/>
<runCompareTest tag="T6433170" class="openJDKtests.util.Collections.T6433170" expecteddir="expected" classpath="${openjdk.jar.dir}/${openjdk.jar.filename}"/>
<runCompareTest tag="CheckedMapBash" class="openJDKtests.util.Collections.CheckedMapBash" expecteddir="expected" classpath="${openjdk.jar.dir}/${openjdk.jar.filename}"/>
<runCompareTest tag="Swap" class="openJDKtests.util.Collections.Swap" expecteddir="expected" classpath="${openjdk.jar.dir}/${openjdk.jar.filename}"/>
<runCompareTest tag="BigBinarySearch" class="openJDKtests.util.Collections.BigBinarySearch" expecteddir="expected" classpath="${openjdk.jar.dir}/${openjdk.jar.filename}"/>
<runCompareTest tag="BinarySearchNullComparator" class="openJDKtests.util.Collections.BinarySearchNullComparator" expecteddir="expected" classpath="${openjdk.jar.dir}/${openjdk.jar.filename}"/>
<runCompareTest tag="AsLifoQueue" class="openJDKtests.util.Collections.AsLifoQueue" expecteddir="expected" classpath="${openjdk.jar.dir}/${openjdk.jar.filename}"/>
<runCompareTest tag="Ser" class="openJDKtests.util.Collections.Ser" expecteddir="expected" classpath="${openjdk.jar.dir}/${openjdk.jar.filename}"/>
<runCompareTest tag="ReverseOrder2" class="openJDKtests.util.Collections.ReverseOrder2" expecteddir="expected" classpath="${openjdk.jar.dir}/${openjdk.jar.filename}"/>
<runCompareTest tag="WrappedNull" class="openJDKtests.util.Collections.WrappedNull" expecteddir="expected" classpath="${openjdk.jar.dir}/${openjdk.jar.filename}"/>
<runCompareTest tag="FindSubList" class="openJDKtests.util.Collections.FindSubList" expecteddir="expected" classpath="${openjdk.jar.dir}/${openjdk.jar.filename}"/>
<runCompareTest tag="RotateEmpty" class="openJDKtests.util.Collections.RotateEmpty" expecteddir="expected" classpath="${openjdk.jar.dir}/${openjdk.jar.filename}"/>
<runCompareTest tag="CheckedNull" class="openJDKtests.util.Collections.CheckedNull" expecteddir="expected" classpath="${openjdk.jar.dir}/${openjdk.jar.filename}"/>
<runCompareTest tag="ViewSynch" class="openJDKtests.util.Collections.ViewSynch" expecteddir="expected" classpath="${openjdk.jar.dir}/${openjdk.jar.filename}"/>
<runCompareTest tag="AddAll" class="openJDKtests.util.Collections.AddAll" expecteddir="expected" classpath="${openjdk.jar.dir}/${openjdk.jar.filename}"/>
<runCompareTest tag="CheckedListBash" class="openJDKtests.util.Collections.CheckedListBash" expecteddir="expected" classpath="${openjdk.jar.dir}/${openjdk.jar.filename}"/>
<runCompareTest tag="NCopies" class="openJDKtests.util.Collections.NCopies" expecteddir="expected" classpath="${openjdk.jar.dir}/${openjdk.jar.filename}"/>
<runCompareTest tag="MinMax" class="openJDKtests.util.Collections.MinMax" expecteddir="expected" classpath="${openjdk.jar.dir}/${openjdk.jar.filename}"/>
<runCompareTest tag="ReplaceAll" class="openJDKtests.util.Collections.ReplaceAll" expecteddir="expected" classpath="${openjdk.jar.dir}/${openjdk.jar.filename}"/>
<runCompareTest tag="Rotate" class="openJDKtests.util.Collections.Rotate" expecteddir="expected" classpath="${openjdk.jar.dir}/${openjdk.jar.filename}"/>
<runCompareTest tag="Enum" class="openJDKtests.util.Collections.Enum" expecteddir="expected" classpath="${openjdk.jar.dir}/${openjdk.jar.filename}"/>
<runCompareTest tag="Disjoint" class="openJDKtests.util.Collections.Disjoint" expecteddir="expected" classpath="${openjdk.jar.dir}/${openjdk.jar.filename}"/>
<runCompareTest tag="Frequency" class="openJDKtests.util.Collections.Frequency" expecteddir="expected" classpath="${openjdk.jar.dir}/${openjdk.jar.filename}"/>
<runCompareTest tag="SetFromMap" class="openJDKtests.util.Collections.SetFromMap" expecteddir="expected" classpath="${openjdk.jar.dir}/${openjdk.jar.filename}"/>
<runCompareTest tag="EmptyCollectionSerialization" class="openJDKtests.util.Collections.EmptyCollectionSerialization" expecteddir="expected" classpath="${openjdk.jar.dir}/${openjdk.jar.filename}"/>
<runCompareTest tag="SimpleEntries" class="openJDKtests.util.AbstractMap.SimpleEntries" expecteddir="expected" classpath="${openjdk.jar.dir}/${openjdk.jar.filename}"/>
<runCompareTest tag="AbstractMapClone" class="openJDKtests.util.AbstractMap.AbstractMapClone" expecteddir="expected" classpath="${openjdk.jar.dir}/${openjdk.jar.filename}"/>
<runCompareTest tag="Equals" class="openJDKtests.util.AbstractMap.Equals" expecteddir="expected" classpath="${openjdk.jar.dir}/${openjdk.jar.filename}"/>
<runCompareTest tag="ToString" class="openJDKtests.util.AbstractMap.ToString" expecteddir="expected" classpath="${openjdk.jar.dir}/${openjdk.jar.filename}"/>
<runCompareTest tag="ArrayObjectMethods" class="openJDKtests.util.Arrays.ArrayObjectMethods" expecteddir="expected" classpath="${openjdk.jar.dir}/${openjdk.jar.filename}"/>
<runCompareTest tag="Big" class="openJDKtests.util.Arrays.Big" expecteddir="expected" classpath="${openjdk.jar.dir}/${openjdk.jar.filename}"/>
<runCompareTest tag="Correct" class="openJDKtests.util.Arrays.Correct" expecteddir="expected" classpath="${openjdk.jar.dir}/${openjdk.jar.filename}"/>
<runCompareTest tag="Fill" class="openJDKtests.util.Arrays.Fill" expecteddir="expected" classpath="${openjdk.jar.dir}/${openjdk.jar.filename}"/>
<runCompareTest tag="CopyMethods" class="openJDKtests.util.Arrays.CopyMethods" expecteddir="expected" classpath="${openjdk.jar.dir}/${openjdk.jar.filename}"/>
<runCompareTest tag="ZeroInitCap" class="openJDKtests.util.WeakHashMap.ZeroInitCap" expecteddir="expected" classpath="${openjdk.jar.dir}/${openjdk.jar.filename}"/>
<runCompareTest tag="Iteration" class="openJDKtests.util.WeakHashMap.Iteration" expecteddir="expected" classpath="${openjdk.jar.dir}/${openjdk.jar.filename}"/>
<runCompareTest tag="StockName" class="openJDKtests.util.Formattable.StockName" expecteddir="expected" classpath="${openjdk.jar.dir}/${openjdk.jar.filename}"/>
<runCompareTest tag="ToArray" class="openJDKtests.util.EnumMap.ToArray" expecteddir="expected" classpath="${openjdk.jar.dir}/${openjdk.jar.filename}"/>
<runCompareTest tag="EnumMapBash" class="openJDKtests.util.EnumMap.EnumMapBash" expecteddir="expected" classpath="${openjdk.jar.dir}/${openjdk.jar.filename}"/>
<runCompareTest tag="ToArray" class="openJDKtests.util.IdentityHashMap.ToArray" expecteddir="expected" classpath="${openjdk.jar.dir}/${openjdk.jar.filename}"/>
<runCompareTest tag="ResetPos" class="openJDKtests.util.StringTokenizer.ResetPos" expecteddir="expected" classpath="${openjdk.jar.dir}/${openjdk.jar.filename}"/>
<runCompareTest tag="FormFeed" class="openJDKtests.util.StringTokenizer.FormFeed" expecteddir="expected" classpath="${openjdk.jar.dir}/${openjdk.jar.filename}"/>
<runCompareTest tag="Supplementary" class="openJDKtests.util.StringTokenizer.Supplementary" expecteddir="expected" classpath="${openjdk.jar.dir}/${openjdk.jar.filename}"/>
<runCompareTest tag="ChorusLine" class="openJDKtests.util.Deque.ChorusLine" expecteddir="expected" classpath="${openjdk.jar.dir}/${openjdk.jar.filename}"/>
<runCompareTest tag="SubMapClear" class="openJDKtests.util.TreeMap.SubMapClear" expecteddir="expected" classpath="${openjdk.jar.dir}/${openjdk.jar.filename}"/>
<runCompareTest tag="SubMap" class="openJDKtests.util.TreeMap.SubMap" expecteddir="expected" classpath="${openjdk.jar.dir}/${openjdk.jar.filename}"/>
<runCompareTest tag="NullAtEnd" class="openJDKtests.util.TreeMap.NullAtEnd" expecteddir="expected" classpath="${openjdk.jar.dir}/${openjdk.jar.filename}"/>
<runCompareTest tag="HeadTailTypeError" class="openJDKtests.util.TreeMap.HeadTailTypeError" expecteddir="expected" classpath="${openjdk.jar.dir}/${openjdk.jar.filename}"/>
<runCompareTest tag="ContainsValue" class="openJDKtests.util.TreeMap.ContainsValue" expecteddir="expected" classpath="${openjdk.jar.dir}/${openjdk.jar.filename}"/>
<runCompareTest tag="JumboRange" class="openJDKtests.util.EnumSet.JumboRange" expecteddir="expected" classpath="${openjdk.jar.dir}/${openjdk.jar.filename}"/>
<runCompareTest tag="EnumSetBash" class="openJDKtests.util.EnumSet.EnumSetBash" expecteddir="expected" classpath="${openjdk.jar.dir}/${openjdk.jar.filename}"/>
<runCompareTest tag="AllOf" class="openJDKtests.util.EnumSet.AllOf" expecteddir="expected" classpath="${openjdk.jar.dir}/${openjdk.jar.filename}"/>
<runCompareTest tag="InsertWrongType" class="openJDKtests.util.EnumSet.InsertWrongType" expecteddir="expected" classpath="${openjdk.jar.dir}/${openjdk.jar.filename}"/>
<runCompareTest tag="RetainAll" class="openJDKtests.util.EnumSet.RetainAll" expecteddir="expected" classpath="${openjdk.jar.dir}/${openjdk.jar.filename}"/>
<runCompareTest tag="Range" class="openJDKtests.util.EnumSet.Range" expecteddir="expected" classpath="${openjdk.jar.dir}/${openjdk.jar.filename}"/>
<runCompareTest tag="ComplementOf" class="openJDKtests.util.EnumSet.ComplementOf" expecteddir="expected" classpath="${openjdk.jar.dir}/${openjdk.jar.filename}"/>
<runCompareTest tag="BogusEnumSet" class="openJDKtests.util.EnumSet.BogusEnumSet" expecteddir="expected" classpath="${openjdk.jar.dir}/${openjdk.jar.filename}"/>
<runCompareTest tag="EndOfDay" class="openJDKtests.util.SimpleTimeZone.EndOfDay" expecteddir="expected" classpath="${openjdk.jar.dir}/${openjdk.jar.filename}"/>
<runCompareTest tag="StickySize" class="openJDKtests.util.BitSet.StickySize" expecteddir="expected" classpath="${openjdk.jar.dir}/${openjdk.jar.filename}"/>
<runCompareTest tag="And" class="openJDKtests.util.BitSet.And" expecteddir="expected" classpath="${openjdk.jar.dir}/${openjdk.jar.filename}"/>
<runCompareTest tag="MemoryLeak" class="openJDKtests.util.BitSet.MemoryLeak" expecteddir="expected" classpath="${openjdk.jar.dir}/${openjdk.jar.filename}"/>
<runCompareTest tag="BSMethods" class="openJDKtests.util.BitSet.BSMethods" expecteddir="expected" classpath="${openjdk.jar.dir}/${openjdk.jar.filename}"/>
<runCompareTest tag="AddAll" class="openJDKtests.util.AbstractSequentialList.AddAll" expecteddir="expected" classpath="${openjdk.jar.dir}/${openjdk.jar.filename}"/>
<runCompareTest tag="SetValue" class="openJDKtests.util.HashMap.SetValue" expecteddir="expected" classpath="${openjdk.jar.dir}/${openjdk.jar.filename}"/>
<runCompareTest tag="KeySetRemove" class="openJDKtests.util.HashMap.KeySetRemove" expecteddir="expected" classpath="${openjdk.jar.dir}/${openjdk.jar.filename}"/>
<runCompareTest tag="Get" class="openJDKtests.util.Map.Get" expecteddir="expected" classpath="${openjdk.jar.dir}/${openjdk.jar.filename}"/>
<runCompareTest tag="NextBytes" class="openJDKtests.util.Random.NextBytes" expecteddir="expected" classpath="${openjdk.jar.dir}/${openjdk.jar.filename}"/>
<runCompareTest tag="NextIntPowerOfTwoMod" class="openJDKtests.util.Random.NextIntPowerOfTwoMod" expecteddir="expected" classpath="${openjdk.jar.dir}/${openjdk.jar.filename}"/>
<runCompareTest tag="DistinctSeeds" class="openJDKtests.util.Random.DistinctSeeds" expecteddir="expected" classpath="${openjdk.jar.dir}/${openjdk.jar.filename}"/>
<runCompareTest tag="UUIDTest" class="openJDKtests.util.UUID.UUIDTest" expecteddir="expected" classpath="${openjdk.jar.dir}/${openjdk.jar.filename}"/>
<runCompareTest tag="Serial" class="openJDKtests.util.UUID.Serial" expecteddir="expected" classpath="${openjdk.jar.dir}/${openjdk.jar.filename}"/>
<runCompareTest tag="Remove" class="openJDKtests.util.LinkedList.Remove" expecteddir="expected" classpath="${openjdk.jar.dir}/${openjdk.jar.filename}"/>
<runCompareTest tag="AddAll" class="openJDKtests.util.LinkedList.AddAll" expecteddir="expected" classpath="${openjdk.jar.dir}/${openjdk.jar.filename}"/>
<runCompareTest tag="Clone" class="openJDKtests.util.LinkedList.Clone" expecteddir="expected" classpath="${openjdk.jar.dir}/${openjdk.jar.filename}"/>
<runCompareTest tag="ComodifiedRemove" class="openJDKtests.util.LinkedList.ComodifiedRemove" expecteddir="expected" classpath="${openjdk.jar.dir}/${openjdk.jar.filename}"/>
<runCompareTest tag="HasNextAfterException" class="openJDKtests.util.AbstractList.HasNextAfterException" expecteddir="expected" classpath="${openjdk.jar.dir}/${openjdk.jar.filename}"/>
<runCompareTest tag="FailFastIterator" class="openJDKtests.util.AbstractList.FailFastIterator" expecteddir="expected" classpath="${openjdk.jar.dir}/${openjdk.jar.filename}"/>
<runCompareTest tag="CopyInto" class="openJDKtests.util.Vector.CopyInto" expecteddir="expected" classpath="${openjdk.jar.dir}/${openjdk.jar.filename}"/>
<runCompareTest tag="IllegalConstructorArgs" class="openJDKtests.util.Vector.IllegalConstructorArgs" expecteddir="expected" classpath="${openjdk.jar.dir}/${openjdk.jar.filename}"/>
<runCompareTest tag="SyncLastIndexOf" class="openJDKtests.util.Vector.SyncLastIndexOf" expecteddir="expected" classpath="${openjdk.jar.dir}/${openjdk.jar.filename}"/>
<runCompareTest tag="ComodifiedRemoveAllElements" class="openJDKtests.util.Vector.ComodifiedRemoveAllElements" expecteddir="expected" classpath="${openjdk.jar.dir}/${openjdk.jar.filename}"/>
<runCompareTest tag="LastIndexOf" class="openJDKtests.util.Vector.LastIndexOf" expecteddir="expected" classpath="${openjdk.jar.dir}/${openjdk.jar.filename}"/>
<finishResults/>

</target>

</project>
